//Writed by Artem Chat
import com.google.gson.Gson;



import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Date;

public class GlavnoeOkno extends JDialog {
    private JPanel contentPane;
    private JTextArea textArea1;
    private JTextField textField1;
    private JButton button1;
    private JTextPane textPane1;
    private JLabel label;
    private JLabel label2;
    Chat chat;
    File chatFile;
    Date data;
    String text;
    String author;
    String read;

    private JButton buttonCancel;

    //ТУТ ВСЕ ИЗ КЛАССА CHAT CONTROLLER

    public void sohranitChat() {
        Gson gson = new Gson();
        String chatJson = gson.toJson(chat);
        BufferedWriter bw = null;
        FileWriter fw = null;
        chatFile = new File("C:\\chats\\" + chat.getNazvanie());
        try {
            fw = new FileWriter(chatFile.getAbsolutePath());
            bw = new BufferedWriter(fw);
            bw.write(chatJson);
            bw.flush();
            bw.close();
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void obnovitChat() {
        try {
            byte[] encoded = Files.readAllBytes(
                    Paths.get(chatFile.getAbsolutePath()));
            String chatJson = new String(encoded, StandardCharsets.UTF_8);
            Gson gson = new Gson();
            chat = gson.fromJson(chatJson, Chat.class);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //А ТУТ УЖЕ ГЛАВНОЕ ОКНО
    public GlavnoeOkno() {
        Chat chat = new Chat("Test", "Chat", new Date());
        label.setText(chat.getNazvanie());
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(button1);

        if (button1.getModel().isPressed()) {

            obnovitChat();

            if (label2.getText() == null) {
                text = textField1.getText();
                label2.setText(author.toString() + text.toString());
            } else {
                String textread;
                textread = textArea1.getText();
                label2.setText(textread + "\n" + text.toString() + author);
            }


            sohranitChat();
        }


    }


    public void onOK() {

        obnovitChat();

        if (textArea1.getText() == null) {
            text = textField1.getText();
            textArea1.setText(author.toString() + text.toString());
        } else {
            String textread;
            textread = textArea1.getText();
            textArea1.setText(textread + "\n" + text.toString() + author.toString());
        }


        sohranitChat();
    }


    private void onCancel() {
        // add your code here if necessary
        dispose();
    }

    public static void main(String[] args) {

        ChatController cc = new ChatController("Test");
        GlavnoeOkno dialog = new GlavnoeOkno();
        dialog.pack();
        dialog.setSize(800, 600);
        dialog.setResizable(false);
        dialog.setVisible(true);
        System.exit(0);

    }
//GUI CODE

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(1, 1, 1, 1), -1, -1));
        contentPane.setEnabled(true);
        textField1 = new JTextField();
        contentPane.add(textField1, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        label = new JLabel();
        label.setText("");
        contentPane.add(label, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        label2 = new JLabel();
        label2.setText("Label");
        contentPane.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button1 = new JButton();
        button1.setText("Button");
        contentPane.add(button1, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}